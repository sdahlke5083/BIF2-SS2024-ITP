@page "/bills/delete"
@attribute [Authorize]
@inject Geld_Guardian.Data.ApplicationDbContext DB
@using Geld_Guardian.Pages.Data.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Bill</h4>
    <hr />
    @if (bill is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">StoreName</dt>
            <dd class="col-sm-10">@bill.StoreName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BillingNumber</dt>
            <dd class="col-sm-10">@bill.BillingNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BillDate</dt>
            <dd class="col-sm-10">@bill.BillDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DueDate</dt>
            <dd class="col-sm-10">@bill.DueDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@bill.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@bill.Category</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PaymentMethod</dt>
            <dd class="col-sm-10">@bill.PaymentMethod</dd>
        </dl>
        <EditForm method="post" Model="bill" OnValidSubmit="DeleteBill" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(bill is null)" id="main-btn">Delete</button> |
            <a href="/bills">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Bill? bill;

    [SupplyParameterFromQuery]
    public int BillId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        bill = await DB.Bills.FirstOrDefaultAsync(m => m.BillId == BillId);

        if (bill is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteBill()
    {
        DB.Bills.Remove(bill!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/bills");
    }
}
