@page "/categories/delete"
@attribute [Authorize(Roles = "Admin")]
@inject Geld_Guardian.Data.ApplicationDbContext DB
@using Geld_Guardian.Components.Data.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Categories</h4>
    <hr />
    @if (categories is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@categories.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@categories.Description</dd>
        </dl>
        <EditForm method="post" Model="categories" OnValidSubmit="DeleteCategories" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(categories is null)">Delete</button> |
            <a href="/categories">Back to List</a>
        </EditForm>
    }
</div>

@code {
#nullable enable
    Categorie? categories;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await DB.Categorie.FirstOrDefaultAsync(m => m.CategorieId == Id);

        if (categories is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteCategories()
    {
        DB.Categorie.Remove(categories!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/categories");
    }
}
