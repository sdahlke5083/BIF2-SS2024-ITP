@page "/categories/details"
@attribute [Authorize(Roles = "Admin")]
@inject Geld_Guardian.Data.ApplicationDbContext DB
@using Geld_Guardian.Components.Data.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Categories</h4>
    <hr />
    @if (categories is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt id="row_label" class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@categories.Name</dd>
            <dt id="row_label" class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@categories.Description</dd>
            <dt id="row_label" class="col-sm-2">Used for:</dt>
            <dd class="col-sm-10">@(categories.EarningsInsteadOfExpenses ? "Earnings" : "Expenses") </dd>
        </dl>
        <div>
            <a href="@($"/categories/edit?id={categories.CategorieId}")">Edit</a> |
            <a href="@($"/categories")">Back to List</a>
        </div>
    }
</div>

@code {
#nullable enable
    Categorie? categories;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await DB.Categorie.FirstOrDefaultAsync(m => m.CategorieId == Id);

        if (categories is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
