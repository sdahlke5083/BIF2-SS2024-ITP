@page "/billitems/delete"
@attribute [Authorize]
@inject Geld_Guardian.Data.ApplicationDbContext DB
@using Geld_Guardian.Components.Data.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>BillItem</h4>
    <hr />
    @if (billitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Bill</dt>
            <dd class="col-sm-10">@billitem.Bill.StoreName: @billitem.Bill.BillingNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@billitem.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@billitem.Category.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@billitem.Quantity</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UnitPrice</dt>
            <dd class="col-sm-10">@billitem.UnitPrice</dd>
        </dl>
        <EditForm method="post" Model="billitem" OnValidSubmit="DeleteBillItem" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(billitem is null)">Delete</button> |
            <a href="@($"/bills/details?billid={billitem.BillId}")">Back to List</a>
        </EditForm>
    }
</div>

@code {
    #nullable enable
    BillItem? billitem;

    [SupplyParameterFromQuery]
    public int BillItemId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        billitem = await DB.BillItems
                                .Include(b => b.Category)
                                .Include(b => b.Bill)
                                .FirstOrDefaultAsync(m => m.BillItemId == BillItemId);

        if (billitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteBillItem()
    {
        DB.BillItems.Remove(billitem!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/bills");
    }
}
