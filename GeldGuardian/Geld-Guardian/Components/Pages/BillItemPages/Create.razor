@page "/billitems/create"
@inject Geld_Guardian.Data.ApplicationDbContext DB
@using Geld_Guardian.Pages.Data.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>BillItem</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="BillItem" OnValidSubmit="AddBillItem" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="billid" class="form-label">BillId:</label> 
                <InputNumber id="billid" @bind-Value="BillItem.BillId" class="form-control" /> 
                <ValidationMessage For="() => BillItem.BillId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="BillItem.Description" class="form-control" /> 
                <ValidationMessage For="() => BillItem.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="category" class="form-label">Category:</label> 
                <InputSelect id="category" @bind-Value="BillItem.CategoryId" class="form-control" >
                    @foreach (var cat in Categories)
                    {
                        <option value="@cat.CategorieId">@cat.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => BillItem.CategoryId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="quantity" class="form-label">Quantity:</label> 
                <InputNumber id="quantity" @bind-Value="BillItem.Quantity" class="form-control" /> 
                <ValidationMessage For="() => BillItem.Quantity" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="unitprice" class="form-label">UnitPrice:</label> 
                <InputNumber id="unitprice" @bind-Value="BillItem.UnitPrice" class="form-control" /> 
                <ValidationMessage For="() => BillItem.UnitPrice" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/billitems">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public BillItem BillItem { get; set; } = new();

    public List<Categorie> Categories { get; set; } = [];

    protected override void OnInitialized()
    {
        Categories = DB.Categorie.ToList();
    }

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddBillItem()
    {
        DB.BillItems.Add(BillItem);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/billitems");
    }
}
